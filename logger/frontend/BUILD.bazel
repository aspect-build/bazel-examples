load("@aspect_rules_js//js:defs.bzl", "js_run_devserver")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//logger/frontend:vite/package_json.bzl", "bin")

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    # eslint wants to read this file to power type-aware linter rules.
    # So we have to expose it for the eslint aspect to be able to include it as an action input.
    visibility = ["//visibility:public"],
)

ts_project(
    name = "compile",
    srcs = ["index.ts"],
    declaration = True,
    transpiler = swc,
    deps = ["//logger/schema:logger_proto_ts"],
)

bin.vite_binary(
    name = "vite",
    chdir = package_name(),
)

# Fast developer round-trip under ibazel
js_run_devserver(
    name = "frontend",
    args = ["."],
    data = [
        "index.html",
        "index.js",
    ],
    tool = ":vite",
)

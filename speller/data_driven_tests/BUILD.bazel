load("@rules_cc//cc:defs.bzl", "cc_test")

# Define a test for each of the test case data files

# Here we use a list comprehension, a Python construct also available in
# Starlark. This generates a set of test targets, one for each test case. Bazel
# can then spread these out across build infrastructure for performance.

# Of course, it is possible to achieve the same thing using a test runner's
# parameterization and parallelization capabilities. But those would be specific
# to the test runner rather than generically applicable.

# gazelle:exclude lookup-datatest.cc
[
    cc_test(
        # test-001, test-002
        name = testfile.replace("testcases/", "").replace(".json", ""),
        size = "small",
        srcs = ["lookup-datatest.cc"],
        data = [testfile],
        env = {
            "TEST_CONFIG_FILE": "$(location :%s)" % testfile,
        },
        deps = [
            "//speller/lookup:lookup_lib",
            "//third_party/nlohmann-json:json",
            "@googletest//:gtest_main",
        ],
    )
    for testfile in glob(["testcases/*.json"])
]

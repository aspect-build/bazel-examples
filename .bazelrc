# Import bazelrc presets
import %workspace%/tools/java17.bazelrc
import %workspace%/tools/preset.bazelrc

### YOUR PROJECT SPECIFIC OPTIONS GO HERE ###

# We have a lot of dependencies and are okay with some of them bringing a newer version via a transitive dep.
common --check_direct_dependencies=off

# When running locally, warn about unconfigured git hooks.
common --workspace_status_command=githooks/check-config.sh
# But not on CI.
common:ci --workspace_status_command=

# 'bazel build --config=lint' will produce the linter reports.
build:lint --aspects=//tools/lint:linters.bzl%buf
build:lint --aspects=//tools/lint:linters.bzl%clang_tidy
build:lint --aspects=//tools/lint:linters.bzl%eslint
build:lint --aspects=//tools/lint:linters.bzl%shellcheck
build:lint --aspects=//tools/lint:linters.bzl%ruff
# Request linters produce human-readable output rather than machine-readable
build:lint --output_groups=+rules_lint_human

# for speed, passes an argument `--skipLibCheck` to *every* spawn of tsc
common --@aspect_rules_ts//ts:skipLibCheck=always
# use `tsc` for transpiling, even though it's slow.
# TODO(alex): change to SWC by default
common --@aspect_rules_ts//ts:default_to_tsc_transpiler

# To stamp release builds, run with
# --config=release
common:release --stamp --workspace_status_command=./tools/workspace_status.sh

# Allow resolving protoc from a pre-built toolchain
common --incompatible_enable_proto_toolchain_resolution

# Don't depend on a JAVA_HOME pointing at a system JDK
# see https://github.com/bazelbuild/rules_jvm_external/issues/445
build --repo_env=JAVA_HOME=../bazel_tools/jdk

# In support of py_mypy/...

# register mypy_aspect with Bazel
build --aspects //tools/mypy:defs.bzl%mypy_aspect

# optionally, default enable the mypy checks
build --output_groups=+mypy

# Load any settings & overrides specific to the current user.
# This file should appear in `.gitignore` so that settings are not shared with team members. This
# should be last statement in this config so the user configuration is able to overwrite flags from
# this file. See https://bazel.build/configure/best-practices#bazelrc-file.
try-import %workspace%/user.bazelrc
